{"version":3,"sources":["Containers/app.module.scss","hoc/Auxs.js","hoc/withClass.js","Component/Persons/Person/Person.jsx","Component/Persons/Persons.jsx","Component/Cockpit/Cockpit.jsx","Containers/App.js","serviceWorker.js","index.js","Component/Persons/Person/person.module.scss","Component/Cockpit/cockpit.module.scss"],"names":["module","exports","App","App-logo","App-logo-spin","App-header","App-link","red","bold","ShowButton","aux","props","children","withClass","WrappedComponent","className","WithClass","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","assign","ref","forwardRef","Component","React","Person","_this","call","console","log","inputElement","createRef","current","focus","Auxs","AuthContext","Consumer","auth","onClick","click","classes","delete","name","age","type","onChange","changed","Persons","lastElementRef","nextProps","nextState","persons","_this2","map","person","index","Persons_Person_Person","clicked","trackId","event","memo","style","backgroundColor","color","border","classesCustom","length","push","showPersons","title","join","margin","login","authStatus","createContext","state","users","toggleClicked","authenticated","nameChangeHandler","id","toConsumableArray","target","setState","deletePersonHandler","personIndex","splice","togglePersonsHandler","doesShow","prevState","loginHandler","Component_Persons_Persons","Cockpit","Provider","Boolean","window","location","hostname","match","ReactDOM","render","Containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99238b14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__1ycsU\",\"App-logo\":\"app_App-logo__3wtYr\",\"App-logo-spin\":\"app_App-logo-spin__2XSvJ\",\"App-header\":\"app_App-header__3bxFZ\",\"App-link\":\"app_App-link__3deQQ\",\"red\":\"app_red__1pPCV\",\"bold\":\"app_bold__2YLYd\",\"ShowButton\":\"app_ShowButton__1b94I\"};","const aux = props => props.children;\r\n\r\nexport default aux;\r\n","import React, { Component } from \"react\";\r\n\r\n// const withClass = (WrappedComponent, className) => {\r\n//   return props => (\r\n//     <div className={className}>\r\n//       <WrappedComponent {...props} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst withClass = (WrappedComponent, className) => {\r\n  const WithClass = class extends Component {\r\n    render() {\r\n      return (\r\n        <div className={className}>\r\n          <WrappedComponent ref={this.props.forwardRef} {...this.props} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return React.forwardRef((props, ref) => {\r\n    return <WithClass {...props} forwardRef={ref} />;\r\n  });\r\n};\r\n\r\nexport default withClass;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./person.module.scss\";\r\nimport Aux from \"../../../hoc/Auxs\";\r\nimport WithClass from \"../../../hoc/withClass\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AuthContext } from \"../../../Containers/App\";\r\n\r\nclass Person extends Component {\r\n  constructor() {\r\n    super();\r\n    console.log(\"Person Constructor Method called\");\r\n    this.inputElement = React.createRef();\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Person component will Mount\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Person component did Mount\");\r\n    // this.focus();\r\n  }\r\n\r\n  focus() {\r\n    this.inputElement.current.focus();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Person component will un Mount\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Person Render Method called\");\r\n\r\n    return (\r\n      <Aux>\r\n        <AuthContext.Consumer>\r\n          {auth => (auth ? <p>I am authenticated</p> : null)}\r\n        </AuthContext.Consumer>\r\n\r\n        <button onClick={this.props.click} className={classes.delete}>\r\n          X\r\n        </button>\r\n        <p>\r\n          I'am {this.props.name} I am {this.props.age} years\r\n        </p>\r\n        <p>{this.props.children}</p>\r\n        <p>{}</p>\r\n        <input\r\n          ref={this.inputElement}\r\n          type=\"text\"\r\n          onChange={this.props.changed}\r\n          value={this.props.name}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nPerson.propTypes = {\r\n  click: PropTypes.func,\r\n  name: PropTypes.string,\r\n  age: PropTypes.number,\r\n  changed: PropTypes.func,\r\n  trackId: PropTypes.number\r\n};\r\n\r\nexport default WithClass(Person, classes.Person);\r\n","import React, { Component } from \"react\";\r\nimport Person from \"./Person/Person\";\r\n\r\nclass Persons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Persons Constructor Method called\");\r\n    this.lastElementRef = React.createRef();\r\n    console.log(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Persons component will Mount\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Persons component did Mount\");\r\n    this.lastElementRef.current.focus();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Persons component will Un mount\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\r\n      \"Update Person.js Inside componen will receive props\",\r\n      nextProps\r\n    );\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\r\n      \"Update Person.js inside should component update\",\r\n      nextProps,\r\n      this.props.persons\r\n    );\r\n    return nextProps.persons !== this.props.persons;\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    console.log(\"Update Person.js will update\", nextProps, this.props.persons);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Update Person.js component did update\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Persons Render Method called\");\r\n    return this.props.persons.map((person, index) => {\r\n      return (\r\n        <Person\r\n          click={() => this.props.clicked(index)}\r\n          name={person.name}\r\n          age={person.age}\r\n          ref={this.lastElementRef}\r\n          key={index}\r\n          trackId={index}\r\n          changed={event => this.props.changed(event, index)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n// const persons = props =>\r\n//   props.persons.map((person, index) => {\r\n//     console.log(\"Persons child component called\");\r\n//     return (\r\n//       <Person\r\n//         click={() => props.clicked(index)}\r\n//         name={person.name}\r\n//         age={person.age}\r\n//         key={index}\r\n//         changed={event => props.changed(event, index)}\r\n//       />\r\n//     );\r\n//   });\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\nimport classes from \"./cockpit.module.scss\";\r\nimport Aux from \"../../hoc/Auxs\";\r\n\r\nconst cockpit = props => {\r\n  const style = {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    border: \"1px solid blue\"\r\n  };\r\n\r\n  const classesCustom = [];\r\n  if (props.persons.length <= 2) {\r\n    classesCustom.push(\"red\");\r\n  }\r\n  if (props.persons.length <= 1) {\r\n    classesCustom.push(\"bold\");\r\n  }\r\n\r\n  if (props.showPersons) {\r\n    style.backgroundColor = \"red\";\r\n    style.color = \"white\";\r\n    style.border = \"1px solid yellow\";\r\n  }\r\n\r\n  console.log(\"child cockpit component called\");\r\n\r\n  return (\r\n    <Aux>\r\n      <h2>{props.title}</h2>\r\n      <p className={classesCustom.join(\" \")}>Oh Really Working!</p>\r\n      <button\r\n        onClick={props.clicked}\r\n        className={classes.ShowButton}\r\n        style={style}\r\n      >\r\n        Toogle Persons\r\n      </button>\r\n      <button\r\n        className={classes.ShowButton}\r\n        style={{ margin: \"10px auto\" }}\r\n        onClick={props.login}\r\n      >\r\n        {props.authStatus ? \"Logout\" : \"Login\"}\r\n      </button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default React.memo(cockpit);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./app.module.scss\";\r\nimport Persons from \"../Component/Persons/Persons\";\r\nimport Cockpit from \"../Component/Cockpit/Cockpit\";\r\nimport Aux from \"../hoc/Auxs\";\r\nimport WithClass from \"../hoc/withClass\";\r\n\r\nexport const AuthContext = React.createContext(false);\r\n\r\nclass App extends Component {\r\n  state = {\r\n    users: [\r\n      { name: \"Yatish\", age: 23 },\r\n      { name: \"Pro\", age: 24 },\r\n      { name: \"Ultimate\", age: 25 }\r\n    ],\r\n    showPersons: false,\r\n    toggleClicked: 0,\r\n    authenticated: true\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    console.log(\"constructor called\");\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"component will mount\");\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    console.log(\r\n      \"App.js inside get derived state form props\",\r\n      nextProps,\r\n      prevState\r\n    );\r\n    return prevState;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate() {\r\n    console.log(\"method in App.js get shapshot before update\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"component did mount\");\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\r\n      \"Update App.js inside should component update\",\r\n      nextProps,\r\n      this.props.persons\r\n    );\r\n    return true;\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    console.log(\"Update App.js will update\", nextProps, this.props.persons);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Update App.js component did update\");\r\n  }\r\n\r\n  nameChangeHandler = (event, id) => {\r\n    const users = [...this.state.users];\r\n    users[id].name = event.target.value;\r\n\r\n    this.setState({ users });\r\n  };\r\n\r\n  deletePersonHandler = personIndex => {\r\n    const users = [...this.state.users];\r\n    users.splice(personIndex, 1);\r\n    this.setState({ users });\r\n  };\r\n\r\n  togglePersonsHandler = () => {\r\n    const doesShow = this.state.showPersons;\r\n    this.setState((prevState, props) => {\r\n      return {\r\n        showPersons: !doesShow,\r\n        toggleClicked: prevState.toggleClicked + 1\r\n      };\r\n    });\r\n  };\r\n\r\n  loginHandler = () => {\r\n    const auth = this.state.authenticated;\r\n    this.setState((prevState, props) => {\r\n      return {\r\n        authenticated: !auth\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let persons = null;\r\n    console.log(\"render method called\");\r\n    if (this.state.showPersons) {\r\n      persons = (\r\n        <Persons\r\n          persons={this.state.users}\r\n          clicked={this.deletePersonHandler}\r\n          changed={this.nameChangeHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Cockpit\r\n          title={this.props.title}\r\n          persons={this.state.users}\r\n          showPersons={this.state.showPersons}\r\n          clicked={this.togglePersonsHandler}\r\n          login={this.loginHandler}\r\n          authStatus={this.state.authenticated}\r\n        />\r\n\r\n        <AuthContext.Provider value={this.state.authenticated}>\r\n          {persons}\r\n        </AuthContext.Provider>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithClass(App, classes.App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <App title=\"React Working samples\" />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"person_Person__wnyxD\",\"delete\":\"person_delete__c9yCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"cockpit_red__2tpkA\",\"bold\":\"cockpit_bold__11En2\",\"ShowButton\":\"cockpit_ShowButton__JnkMj\"};"],"sourceRoot":""}