{"version":3,"sources":["Containers/app.module.scss","Component/Cockpit/cockpit.module.scss","Component/Persons/Person/Person.jsx","Component/Persons/Persons.jsx","Component/Cockpit/Cockpit.jsx","Containers/App.js","serviceWorker.js","index.js","Component/Persons/Person/person.module.scss"],"names":["module","exports","App","App-logo","App-logo-spin","App-header","App-link","red","bold","ShowButton","Person","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","react_default","a","createElement","className","classes","onClick","props","click","delete","name","age","children","type","onChange","changed","value","Component","Persons","nextProps","nextState","persons","_this2","map","person","index","Persons_Person_Person","clicked","key","event","cockpit","style","backgroundColor","color","border","classesCustom","length","push","showPersons","title","join","state","users","nameChangeHandler","id","toConsumableArray","target","setState","deletePersonHandler","personIndex","splice","togglePersonsHandler","doesShow","Component_Persons_Persons","Cockpit","Boolean","window","location","hostname","match","ReactDOM","render","Containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7555043.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__1ycsU\",\"App-logo\":\"app_App-logo__3wtYr\",\"App-logo-spin\":\"app_App-logo-spin__2XSvJ\",\"App-header\":\"app_App-header__3bxFZ\",\"App-link\":\"app_App-link__3deQQ\",\"red\":\"app_red__1pPCV\",\"bold\":\"app_bold__2YLYd\",\"ShowButton\":\"app_ShowButton__1b94I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"cockpit_red__2tpkA\",\"bold\":\"cockpit_bold__11En2\",\"ShowButton\":\"cockpit_ShowButton__JnkMj\"};","import React, { Component } from \"react\";\r\nimport classes from \"./person.module.scss\";\r\n\r\nclass Person extends Component {\r\n  constructor() {\r\n    super();\r\n    console.log(\"Person Constructor Method called\");\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Person component will Mount\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Person component did Mount\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Person component will un Mount\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Person Render Method called\");\r\n\r\n    return (\r\n      <div className={classes.Person}>\r\n        <button onClick={this.props.click} className={classes.delete}>\r\n          X\r\n        </button>\r\n        <p>\r\n          I'am {this.props.name} I am {this.props.age} years\r\n        </p>\r\n        <p>{this.props.children}</p>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.props.changed}\r\n          value={this.props.name}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const Person = props => {\r\n//   console.log(\"Person Child Compnent Called\");\r\n//   return (\r\n//     <div className={classes.Person}>\r\n//       <button onClick={props.click} className={classes.delete}>\r\n//         X\r\n//       </button>\r\n//       <p>\r\n//         I'am {props.name} I am {props.age} years\r\n//       </p>\r\n//       <p>{props.children}</p>\r\n//       <input type=\"text\" onChange={props.changed} value={props.name} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Person;\r\n","import React, { Component } from \"react\";\r\nimport Person from \"./Person/Person\";\r\n\r\nclass Persons extends Component {\r\n  constructor() {\r\n    super();\r\n    console.log(\"Persons Constructor Method called\");\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Persons component will Mount\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Persons component did Mount\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Persons component will Un mount\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\r\n      \"Update Person.js Inside componen will receive props\",\r\n      nextProps\r\n    );\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\r\n      \"Update Person.js inside should component update\",\r\n      nextProps,\r\n      this.props.persons\r\n    );\r\n    return nextProps.persons !== this.props.persons;\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    console.log(\"Update Person.js will update\", nextProps, this.props.persons);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Update Person.js component did update\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Persons Render Method called\");\r\n\r\n    return this.props.persons.map((person, index) => {\r\n      return (\r\n        <Person\r\n          click={() => this.props.clicked(index)}\r\n          name={person.name}\r\n          age={person.age}\r\n          key={index}\r\n          changed={event => this.props.changed(event, index)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n// const persons = props =>\r\n//   props.persons.map((person, index) => {\r\n//     console.log(\"Persons child component called\");\r\n//     return (\r\n//       <Person\r\n//         click={() => props.clicked(index)}\r\n//         name={person.name}\r\n//         age={person.age}\r\n//         key={index}\r\n//         changed={event => props.changed(event, index)}\r\n//       />\r\n//     );\r\n//   });\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\nimport classes from \"./cockpit.module.scss\";\r\n\r\nconst cockpit = props => {\r\n  const style = {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    border: \"1px solid blue\"\r\n  };\r\n\r\n  const classesCustom = [];\r\n  if (props.persons.length <= 2) {\r\n    classesCustom.push(\"red\");\r\n  }\r\n  if (props.persons.length <= 1) {\r\n    classesCustom.push(\"bold\");\r\n  }\r\n\r\n  if (props.showPersons) {\r\n    style.backgroundColor = \"red\";\r\n    style.color = \"white\";\r\n    style.border = \"1px solid yellow\";\r\n  }\r\n\r\n  console.log(\"child cockpit component called\");\r\n\r\n  return (\r\n    <div>\r\n      <h2>{props.title}</h2>\r\n      <p className={classesCustom.join(\" \")}>Oh Really Working!</p>\r\n      <button\r\n        onClick={props.clicked}\r\n        className={classes.ShowButton}\r\n        style={style}\r\n      >\r\n        Toogle Persons\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default cockpit;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./app.module.scss\";\r\nimport Persons from \"../Component/Persons/Persons\";\r\nimport Cockpit from \"../Component/Cockpit/Cockpit\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    users: [\r\n      { name: \"Yatish\", age: \"23\" },\r\n      { name: \"Pro\", age: \"24\" },\r\n      { name: \"Ultimate\", age: \"25\" }\r\n    ],\r\n    showPersons: false\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    console.log(\"constructor called\");\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"component will mount\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"component did mount\");\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\r\n      \"Update App.js inside should component update\",\r\n      nextProps,\r\n      this.props.persons\r\n    );\r\n    return true;\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    console.log(\"Update App.js will update\", nextProps, this.props.persons);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Update App.js component did update\");\r\n  }\r\n\r\n  nameChangeHandler = (event, id) => {\r\n    const users = [...this.state.users];\r\n    users[id].name = event.target.value;\r\n\r\n    this.setState({ users });\r\n  };\r\n\r\n  deletePersonHandler = personIndex => {\r\n    const users = [...this.state.users];\r\n    users.splice(personIndex, 1);\r\n    this.setState({ users });\r\n  };\r\n\r\n  togglePersonsHandler = () => {\r\n    const doesShow = this.state.showPersons;\r\n    this.setState({ showPersons: !doesShow });\r\n  };\r\n\r\n  render() {\r\n    let persons = null;\r\n    console.log(\"render method called\");\r\n    if (this.state.showPersons) {\r\n      persons = (\r\n        <Persons\r\n          persons={this.state.users}\r\n          clicked={this.deletePersonHandler}\r\n          changed={this.nameChangeHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={classes.App}>\r\n        <Cockpit\r\n          title={this.props.title}\r\n          persons={this.state.users}\r\n          showPersons={this.state.showPersons}\r\n          clicked={this.togglePersonsHandler}\r\n        />\r\n        {persons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <App title=\"React Working samples\" />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"person_Person__wnyxD\",\"delete\":\"person_delete__c9yCJ\"};"],"sourceRoot":""}